/*
 * OpenMetadata Apis
 * --- title: APIs slug: /main-concepts/metadata-standard/apis ---  # APIs  OpenMetadata supports REST APIs for getting data and in and out of the metadata service. APIs are built using general best practices of REST API design. We take a schema-first approach by defining Types and Entities in JSON Schema. We implement APIs based on these schemas.  ## Overview  ### URI  Following REST API conventions are followed for Resource URIs: - Operations for an entity are available through the Resource URI as a collection `.../api/<version>/entities`.  - Plural of the entity name is used as the collection name - example `.../api/v1/users`. - Trailing forward slash is not used in the endpoint URI. Example use `.../api/v1/databases` instead of `.../api/v1/databases/`. - Resource URI for an entity instance by the entity id is `.../api/v1/entities/{id}`.  - Resource URI for an entity instance by name is `.../api/v1/entities/name/{name}`.  ### Resource Representation  - The REST API calls return a response with JSON `Content-Type` and `Content-Length` that includes the length of the response. - All responses include the Resource ID field even though the id was provided in the request to simplify the consumption    of the response at the client. - Entity names and field names use `camelCase` per Javascript naming convention. - All resources include an attribute `href` with Resource URI. All relationship fields of an entity will also    include `href` links to the related resource for easy access. - Unknown fields sent by the client in API requests are not ignored to ensure the data sent by the client is not dropped    at the server without the user being aware of it.  ## API Organization  You can find the swagger documentation [here](/swagger.html). In a nutshell:  **Data Asset APIs** - support operations related to data asset entities. - `.../api/v1/databases` - `...api/v1/tables` - `.../api/v1/metrics` - `.../api/v1/dashboards` - `.../api/v1/reports` - `.../api/v1/pipelines` - `.../api/v1/topics`  **Service APIs** - support operations related to services from which metadata is collected: - `.../api/v1/services` is the collection of all service resources. - `.../api/v1/services/databaseService` - APIs related to database services. This includes Transactional databases - MySQL, Postgres, MSSQL, Oracle, and Data Warehouses - Apache Hive BigQuery, Redshift, and Snowflake. - `.../api/v1/services/dashboardService` - APIs related to Dashboard Services. This includes Looker, Superset, and Tableau. - `.../api/v1/services/messagingService` - APIs related to Messaging Services. This includes Apache Kafka, Redpanda, - Kinesis, and others.  **Teams & Users APIs** - `.../api/v1/teams` - APIs related to team entities - `.../api/v1/users` - APIs related to user entities  **Search & Suggest APIs** - support search and suggest APIs: - `.../api/v1/search` - collection for search and suggest APIs - `.../api/v1/search/query` - search entities using query text - `.../api/v1/search/suggest` - get suggested entities used for auto-completion  **Other APIs** - `.../api/v1/tags` for APIs related to Classification and Tag entities - `../api/v1/feeds` for APIs related to Threads and Posts entities - `.../api/v1/usage` for reporting usage information of entities
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: openmetadata-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openmetadata.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openmetadata.client.model.ChangeDescription;
import org.openmetadata.client.model.EntityReference;
import org.openmetadata.client.model.Indicator;
import org.openmetadata.client.model.LifeCycle;
import org.openmetadata.client.model.Style;
import org.openmetadata.client.model.TagLabel;
import org.openmetadata.client.model.Votes;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Dla
 */
@JsonPropertyOrder({
  Dla.JSON_PROPERTY_ADDITIONAL_INFORMATION,
  Dla.JSON_PROPERTY_AUTO_CONSUMER_SYSTEM,
  Dla.JSON_PROPERTY_AUTO_SOURCE_SYSTEM,
  Dla.JSON_PROPERTY_CHANGE_DESCRIPTION,
  Dla.JSON_PROPERTY_CHILDREN,
  Dla.JSON_PROPERTY_CONCLUSION_DATE,
  Dla.JSON_PROPERTY_CONSUMER,
  Dla.JSON_PROPERTY_CRON_DATA_ACTUALIZATION,
  Dla.JSON_PROPERTY_CRON_DATA_AVAILABILITY,
  Dla.JSON_PROPERTY_CRON_UPDATE_DATA,
  Dla.JSON_PROPERTY_DATA_MANAGER,
  Dla.JSON_PROPERTY_DATA_PRODUCTS,
  Dla.JSON_PROPERTY_DATA_PROVISION_INDICATORS,
  Dla.JSON_PROPERTY_DATA_QUALITY_INDICATORS,
  Dla.JSON_PROPERTY_DATA_REGISTER,
  Dla.JSON_PROPERTY_DATA_STEWARD,
  Dla.JSON_PROPERTY_DELETED,
  Dla.JSON_PROPERTY_DEPRECATED,
  Dla.JSON_PROPERTY_DESCRIPTION,
  Dla.JSON_PROPERTY_DISABLED,
  Dla.JSON_PROPERTY_DISPLAY_NAME,
  Dla.JSON_PROPERTY_DLA_CLASSIFICATION,
  Dla.JSON_PROPERTY_DOC_NUMBER,
  Dla.JSON_PROPERTY_DOC_STATUS,
  Dla.JSON_PROPERTY_DOC_TYPE,
  Dla.JSON_PROPERTY_DOMAIN,
  Dla.JSON_PROPERTY_DOMAIN_DATA,
  Dla.JSON_PROPERTY_EXPERTS,
  Dla.JSON_PROPERTY_EXPIRATION_DATE,
  Dla.JSON_PROPERTY_EXTENSION,
  Dla.JSON_PROPERTY_FOLLOWERS,
  Dla.JSON_PROPERTY_FULLY_QUALIFIED_NAME,
  Dla.JSON_PROPERTY_HREF,
  Dla.JSON_PROPERTY_ID,
  Dla.JSON_PROPERTY_INCIDEN_SIGNS,
  Dla.JSON_PROPERTY_LIFE_CYCLE,
  Dla.JSON_PROPERTY_MUTUALLY_EXCLUSIVE,
  Dla.JSON_PROPERTY_NAME,
  Dla.JSON_PROPERTY_OWNER,
  Dla.JSON_PROPERTY_PARENT,
  Dla.JSON_PROPERTY_PROLONGATION,
  Dla.JSON_PROPERTY_PROVIDER,
  Dla.JSON_PROPERTY_PUBLICATION_AREA,
  Dla.JSON_PROPERTY_REPORTING_HREF,
  Dla.JSON_PROPERTY_REPORTING_PERIODICITY,
  Dla.JSON_PROPERTY_REPORTING_RECEIVER_ROLE,
  Dla.JSON_PROPERTY_REPORTING_RESPONSIBLE,
  Dla.JSON_PROPERTY_REPORTING_TYPE,
  Dla.JSON_PROPERTY_REVIEWERS,
  Dla.JSON_PROPERTY_STYLE,
  Dla.JSON_PROPERTY_TAGS,
  Dla.JSON_PROPERTY_UPDATED_AT,
  Dla.JSON_PROPERTY_UPDATED_BY,
  Dla.JSON_PROPERTY_USAGE_COUNT,
  Dla.JSON_PROPERTY_VALIDITY,
  Dla.JSON_PROPERTY_VERSION,
  Dla.JSON_PROPERTY_VOTES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-27T13:40:41.122769+03:00[Europe/Moscow]")
public class Dla {
  public static final String JSON_PROPERTY_ADDITIONAL_INFORMATION = "additionalInformation";
  private String additionalInformation;

  public static final String JSON_PROPERTY_AUTO_CONSUMER_SYSTEM = "autoConsumerSystem";
  private List<EntityReference> autoConsumerSystem = null;

  public static final String JSON_PROPERTY_AUTO_SOURCE_SYSTEM = "autoSourceSystem";
  private List<EntityReference> autoSourceSystem = null;

  public static final String JSON_PROPERTY_CHANGE_DESCRIPTION = "changeDescription";
  private ChangeDescription changeDescription;

  public static final String JSON_PROPERTY_CHILDREN = "children";
  private List<EntityReference> children = null;

  public static final String JSON_PROPERTY_CONCLUSION_DATE = "conclusionDate";
  private String conclusionDate;

  public static final String JSON_PROPERTY_CONSUMER = "consumer";
  private String consumer;

  public static final String JSON_PROPERTY_CRON_DATA_ACTUALIZATION = "cronDataActualization";
  private String cronDataActualization;

  public static final String JSON_PROPERTY_CRON_DATA_AVAILABILITY = "cronDataAvailability";
  private String cronDataAvailability;

  public static final String JSON_PROPERTY_CRON_UPDATE_DATA = "cronUpdateData";
  private String cronUpdateData;

  public static final String JSON_PROPERTY_DATA_MANAGER = "dataManager";
  private String dataManager;

  public static final String JSON_PROPERTY_DATA_PRODUCTS = "dataProducts";
  private List<EntityReference> dataProducts = null;

  public static final String JSON_PROPERTY_DATA_PROVISION_INDICATORS = "dataProvisionIndicators";
  private List<Indicator> dataProvisionIndicators = null;

  public static final String JSON_PROPERTY_DATA_QUALITY_INDICATORS = "dataQualityIndicators";
  private List<Indicator> dataQualityIndicators = null;

  public static final String JSON_PROPERTY_DATA_REGISTER = "dataRegister";
  private String dataRegister;

  public static final String JSON_PROPERTY_DATA_STEWARD = "dataSteward";
  private String dataSteward;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  public static final String JSON_PROPERTY_DEPRECATED = "deprecated";
  private Boolean deprecated;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private Boolean disabled;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_DLA_CLASSIFICATION = "dlaClassification";
  private EntityReference dlaClassification;

  public static final String JSON_PROPERTY_DOC_NUMBER = "docNumber";
  private String docNumber;

  public static final String JSON_PROPERTY_DOC_STATUS = "docStatus";
  private String docStatus;

  public static final String JSON_PROPERTY_DOC_TYPE = "docType";
  private String docType;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private EntityReference domain;

  public static final String JSON_PROPERTY_DOMAIN_DATA = "domainData";
  private String domainData;

  public static final String JSON_PROPERTY_EXPERTS = "experts";
  private List<EntityReference> experts = null;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private String expirationDate;

  public static final String JSON_PROPERTY_EXTENSION = "extension";
  private Object extension;

  public static final String JSON_PROPERTY_FOLLOWERS = "followers";
  private List<EntityReference> followers = null;

  public static final String JSON_PROPERTY_FULLY_QUALIFIED_NAME = "fullyQualifiedName";
  private String fullyQualifiedName;

  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_INCIDEN_SIGNS = "incidenSigns";
  private String incidenSigns;

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private LifeCycle lifeCycle;

  public static final String JSON_PROPERTY_MUTUALLY_EXCLUSIVE = "mutuallyExclusive";
  private Boolean mutuallyExclusive;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private EntityReference owner;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private EntityReference parent;

  public static final String JSON_PROPERTY_PROLONGATION = "prolongation";
  private Boolean prolongation;

  /**
   * Gets or Sets provider
   */
  public enum ProviderEnum {
    SYSTEM("system"),
    
    USER("user");

    private String value;

    ProviderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProviderEnum fromValue(String value) {
      for (ProviderEnum b : ProviderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private ProviderEnum provider;

  public static final String JSON_PROPERTY_PUBLICATION_AREA = "publicationArea";
  private String publicationArea;

  public static final String JSON_PROPERTY_REPORTING_HREF = "reportingHref";
  private String reportingHref;

  public static final String JSON_PROPERTY_REPORTING_PERIODICITY = "reportingPeriodicity";
  private String reportingPeriodicity;

  public static final String JSON_PROPERTY_REPORTING_RECEIVER_ROLE = "reportingReceiverRole";
  private String reportingReceiverRole;

  public static final String JSON_PROPERTY_REPORTING_RESPONSIBLE = "reportingResponsible";
  private String reportingResponsible;

  public static final String JSON_PROPERTY_REPORTING_TYPE = "reportingType";
  private String reportingType;

  public static final String JSON_PROPERTY_REVIEWERS = "reviewers";
  private List<EntityReference> reviewers = null;

  public static final String JSON_PROPERTY_STYLE = "style";
  private Style style;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagLabel> tags = null;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private Long updatedAt;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_USAGE_COUNT = "usageCount";
  private Integer usageCount;

  public static final String JSON_PROPERTY_VALIDITY = "validity";
  private String validity;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Double version;

  public static final String JSON_PROPERTY_VOTES = "votes";
  private Votes votes;

  public Dla() { 
  }

  public Dla additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public Dla autoConsumerSystem(List<EntityReference> autoConsumerSystem) {
    
    this.autoConsumerSystem = autoConsumerSystem;
    return this;
  }

  public Dla addAutoConsumerSystemItem(EntityReference autoConsumerSystemItem) {
    if (this.autoConsumerSystem == null) {
      this.autoConsumerSystem = new ArrayList<>();
    }
    this.autoConsumerSystem.add(autoConsumerSystemItem);
    return this;
  }

   /**
   * Get autoConsumerSystem
   * @return autoConsumerSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTO_CONSUMER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getAutoConsumerSystem() {
    return autoConsumerSystem;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_CONSUMER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoConsumerSystem(List<EntityReference> autoConsumerSystem) {
    this.autoConsumerSystem = autoConsumerSystem;
  }


  public Dla autoSourceSystem(List<EntityReference> autoSourceSystem) {
    
    this.autoSourceSystem = autoSourceSystem;
    return this;
  }

  public Dla addAutoSourceSystemItem(EntityReference autoSourceSystemItem) {
    if (this.autoSourceSystem == null) {
      this.autoSourceSystem = new ArrayList<>();
    }
    this.autoSourceSystem.add(autoSourceSystemItem);
    return this;
  }

   /**
   * Get autoSourceSystem
   * @return autoSourceSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTO_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getAutoSourceSystem() {
    return autoSourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoSourceSystem(List<EntityReference> autoSourceSystem) {
    this.autoSourceSystem = autoSourceSystem;
  }


  public Dla changeDescription(ChangeDescription changeDescription) {
    
    this.changeDescription = changeDescription;
    return this;
  }

   /**
   * Get changeDescription
   * @return changeDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHANGE_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChangeDescription getChangeDescription() {
    return changeDescription;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangeDescription(ChangeDescription changeDescription) {
    this.changeDescription = changeDescription;
  }


  public Dla children(List<EntityReference> children) {
    
    this.children = children;
    return this;
  }

  public Dla addChildrenItem(EntityReference childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getChildren() {
    return children;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildren(List<EntityReference> children) {
    this.children = children;
  }


  public Dla conclusionDate(String conclusionDate) {
    
    this.conclusionDate = conclusionDate;
    return this;
  }

   /**
   * Get conclusionDate
   * @return conclusionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONCLUSION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConclusionDate() {
    return conclusionDate;
  }


  @JsonProperty(JSON_PROPERTY_CONCLUSION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConclusionDate(String conclusionDate) {
    this.conclusionDate = conclusionDate;
  }


  public Dla consumer(String consumer) {
    
    this.consumer = consumer;
    return this;
  }

   /**
   * Get consumer
   * @return consumer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONSUMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConsumer() {
    return consumer;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumer(String consumer) {
    this.consumer = consumer;
  }


  public Dla cronDataActualization(String cronDataActualization) {
    
    this.cronDataActualization = cronDataActualization;
    return this;
  }

   /**
   * Get cronDataActualization
   * @return cronDataActualization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CRON_DATA_ACTUALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCronDataActualization() {
    return cronDataActualization;
  }


  @JsonProperty(JSON_PROPERTY_CRON_DATA_ACTUALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCronDataActualization(String cronDataActualization) {
    this.cronDataActualization = cronDataActualization;
  }


  public Dla cronDataAvailability(String cronDataAvailability) {
    
    this.cronDataAvailability = cronDataAvailability;
    return this;
  }

   /**
   * Get cronDataAvailability
   * @return cronDataAvailability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CRON_DATA_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCronDataAvailability() {
    return cronDataAvailability;
  }


  @JsonProperty(JSON_PROPERTY_CRON_DATA_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCronDataAvailability(String cronDataAvailability) {
    this.cronDataAvailability = cronDataAvailability;
  }


  public Dla cronUpdateData(String cronUpdateData) {
    
    this.cronUpdateData = cronUpdateData;
    return this;
  }

   /**
   * Get cronUpdateData
   * @return cronUpdateData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CRON_UPDATE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCronUpdateData() {
    return cronUpdateData;
  }


  @JsonProperty(JSON_PROPERTY_CRON_UPDATE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCronUpdateData(String cronUpdateData) {
    this.cronUpdateData = cronUpdateData;
  }


  public Dla dataManager(String dataManager) {
    
    this.dataManager = dataManager;
    return this;
  }

   /**
   * Get dataManager
   * @return dataManager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataManager() {
    return dataManager;
  }


  @JsonProperty(JSON_PROPERTY_DATA_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataManager(String dataManager) {
    this.dataManager = dataManager;
  }


  public Dla dataProducts(List<EntityReference> dataProducts) {
    
    this.dataProducts = dataProducts;
    return this;
  }

  public Dla addDataProductsItem(EntityReference dataProductsItem) {
    if (this.dataProducts == null) {
      this.dataProducts = new ArrayList<>();
    }
    this.dataProducts.add(dataProductsItem);
    return this;
  }

   /**
   * Get dataProducts
   * @return dataProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getDataProducts() {
    return dataProducts;
  }


  @JsonProperty(JSON_PROPERTY_DATA_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataProducts(List<EntityReference> dataProducts) {
    this.dataProducts = dataProducts;
  }


  public Dla dataProvisionIndicators(List<Indicator> dataProvisionIndicators) {
    
    this.dataProvisionIndicators = dataProvisionIndicators;
    return this;
  }

  public Dla addDataProvisionIndicatorsItem(Indicator dataProvisionIndicatorsItem) {
    if (this.dataProvisionIndicators == null) {
      this.dataProvisionIndicators = new ArrayList<>();
    }
    this.dataProvisionIndicators.add(dataProvisionIndicatorsItem);
    return this;
  }

   /**
   * Get dataProvisionIndicators
   * @return dataProvisionIndicators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_PROVISION_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Indicator> getDataProvisionIndicators() {
    return dataProvisionIndicators;
  }


  @JsonProperty(JSON_PROPERTY_DATA_PROVISION_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataProvisionIndicators(List<Indicator> dataProvisionIndicators) {
    this.dataProvisionIndicators = dataProvisionIndicators;
  }


  public Dla dataQualityIndicators(List<Indicator> dataQualityIndicators) {
    
    this.dataQualityIndicators = dataQualityIndicators;
    return this;
  }

  public Dla addDataQualityIndicatorsItem(Indicator dataQualityIndicatorsItem) {
    if (this.dataQualityIndicators == null) {
      this.dataQualityIndicators = new ArrayList<>();
    }
    this.dataQualityIndicators.add(dataQualityIndicatorsItem);
    return this;
  }

   /**
   * Get dataQualityIndicators
   * @return dataQualityIndicators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_QUALITY_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Indicator> getDataQualityIndicators() {
    return dataQualityIndicators;
  }


  @JsonProperty(JSON_PROPERTY_DATA_QUALITY_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataQualityIndicators(List<Indicator> dataQualityIndicators) {
    this.dataQualityIndicators = dataQualityIndicators;
  }


  public Dla dataRegister(String dataRegister) {
    
    this.dataRegister = dataRegister;
    return this;
  }

   /**
   * Get dataRegister
   * @return dataRegister
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataRegister() {
    return dataRegister;
  }


  @JsonProperty(JSON_PROPERTY_DATA_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataRegister(String dataRegister) {
    this.dataRegister = dataRegister;
  }


  public Dla dataSteward(String dataSteward) {
    
    this.dataSteward = dataSteward;
    return this;
  }

   /**
   * Get dataSteward
   * @return dataSteward
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_STEWARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataSteward() {
    return dataSteward;
  }


  @JsonProperty(JSON_PROPERTY_DATA_STEWARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSteward(String dataSteward) {
    this.dataSteward = dataSteward;
  }


  public Dla deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public Dla deprecated(Boolean deprecated) {
    
    this.deprecated = deprecated;
    return this;
  }

   /**
   * Get deprecated
   * @return deprecated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeprecated() {
    return deprecated;
  }


  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecated(Boolean deprecated) {
    this.deprecated = deprecated;
  }


  public Dla description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Dla disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisabled() {
    return disabled;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public Dla displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Dla dlaClassification(EntityReference dlaClassification) {
    
    this.dlaClassification = dlaClassification;
    return this;
  }

   /**
   * Get dlaClassification
   * @return dlaClassification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DLA_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getDlaClassification() {
    return dlaClassification;
  }


  @JsonProperty(JSON_PROPERTY_DLA_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDlaClassification(EntityReference dlaClassification) {
    this.dlaClassification = dlaClassification;
  }


  public Dla docNumber(String docNumber) {
    
    this.docNumber = docNumber;
    return this;
  }

   /**
   * Get docNumber
   * @return docNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOC_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocNumber() {
    return docNumber;
  }


  @JsonProperty(JSON_PROPERTY_DOC_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocNumber(String docNumber) {
    this.docNumber = docNumber;
  }


  public Dla docStatus(String docStatus) {
    
    this.docStatus = docStatus;
    return this;
  }

   /**
   * Get docStatus
   * @return docStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocStatus() {
    return docStatus;
  }


  @JsonProperty(JSON_PROPERTY_DOC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocStatus(String docStatus) {
    this.docStatus = docStatus;
  }


  public Dla docType(String docType) {
    
    this.docType = docType;
    return this;
  }

   /**
   * Get docType
   * @return docType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocType() {
    return docType;
  }


  @JsonProperty(JSON_PROPERTY_DOC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocType(String docType) {
    this.docType = docType;
  }


  public Dla domain(EntityReference domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(EntityReference domain) {
    this.domain = domain;
  }


  public Dla domainData(String domainData) {
    
    this.domainData = domainData;
    return this;
  }

   /**
   * Get domainData
   * @return domainData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainData() {
    return domainData;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainData(String domainData) {
    this.domainData = domainData;
  }


  public Dla experts(List<EntityReference> experts) {
    
    this.experts = experts;
    return this;
  }

  public Dla addExpertsItem(EntityReference expertsItem) {
    if (this.experts == null) {
      this.experts = new ArrayList<>();
    }
    this.experts.add(expertsItem);
    return this;
  }

   /**
   * Get experts
   * @return experts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getExperts() {
    return experts;
  }


  @JsonProperty(JSON_PROPERTY_EXPERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperts(List<EntityReference> experts) {
    this.experts = experts;
  }


  public Dla expirationDate(String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public Dla extension(Object extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getExtension() {
    return extension;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtension(Object extension) {
    this.extension = extension;
  }


  public Dla followers(List<EntityReference> followers) {
    
    this.followers = followers;
    return this;
  }

  public Dla addFollowersItem(EntityReference followersItem) {
    if (this.followers == null) {
      this.followers = new ArrayList<>();
    }
    this.followers.add(followersItem);
    return this;
  }

   /**
   * Get followers
   * @return followers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FOLLOWERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getFollowers() {
    return followers;
  }


  @JsonProperty(JSON_PROPERTY_FOLLOWERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFollowers(List<EntityReference> followers) {
    this.followers = followers;
  }


  public Dla fullyQualifiedName(String fullyQualifiedName) {
    
    this.fullyQualifiedName = fullyQualifiedName;
    return this;
  }

   /**
   * Get fullyQualifiedName
   * @return fullyQualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FULLY_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullyQualifiedName() {
    return fullyQualifiedName;
  }


  @JsonProperty(JSON_PROPERTY_FULLY_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullyQualifiedName(String fullyQualifiedName) {
    this.fullyQualifiedName = fullyQualifiedName;
  }


  public Dla href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(URI href) {
    this.href = href;
  }


  public Dla id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public Dla incidenSigns(String incidenSigns) {
    
    this.incidenSigns = incidenSigns;
    return this;
  }

   /**
   * Get incidenSigns
   * @return incidenSigns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCIDEN_SIGNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncidenSigns() {
    return incidenSigns;
  }


  @JsonProperty(JSON_PROPERTY_INCIDEN_SIGNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncidenSigns(String incidenSigns) {
    this.incidenSigns = incidenSigns;
  }


  public Dla lifeCycle(LifeCycle lifeCycle) {
    
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * Get lifeCycle
   * @return lifeCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LifeCycle getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(LifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public Dla mutuallyExclusive(Boolean mutuallyExclusive) {
    
    this.mutuallyExclusive = mutuallyExclusive;
    return this;
  }

   /**
   * Get mutuallyExclusive
   * @return mutuallyExclusive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MUTUALLY_EXCLUSIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMutuallyExclusive() {
    return mutuallyExclusive;
  }


  @JsonProperty(JSON_PROPERTY_MUTUALLY_EXCLUSIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMutuallyExclusive(Boolean mutuallyExclusive) {
    this.mutuallyExclusive = mutuallyExclusive;
  }


  public Dla name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Dla owner(EntityReference owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(EntityReference owner) {
    this.owner = owner;
  }


  public Dla parent(EntityReference parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(EntityReference parent) {
    this.parent = parent;
  }


  public Dla prolongation(Boolean prolongation) {
    
    this.prolongation = prolongation;
    return this;
  }

   /**
   * Get prolongation
   * @return prolongation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROLONGATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProlongation() {
    return prolongation;
  }


  @JsonProperty(JSON_PROPERTY_PROLONGATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProlongation(Boolean prolongation) {
    this.prolongation = prolongation;
  }


  public Dla provider(ProviderEnum provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProviderEnum getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvider(ProviderEnum provider) {
    this.provider = provider;
  }


  public Dla publicationArea(String publicationArea) {
    
    this.publicationArea = publicationArea;
    return this;
  }

   /**
   * Get publicationArea
   * @return publicationArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PUBLICATION_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublicationArea() {
    return publicationArea;
  }


  @JsonProperty(JSON_PROPERTY_PUBLICATION_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicationArea(String publicationArea) {
    this.publicationArea = publicationArea;
  }


  public Dla reportingHref(String reportingHref) {
    
    this.reportingHref = reportingHref;
    return this;
  }

   /**
   * Get reportingHref
   * @return reportingHref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingHref() {
    return reportingHref;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingHref(String reportingHref) {
    this.reportingHref = reportingHref;
  }


  public Dla reportingPeriodicity(String reportingPeriodicity) {
    
    this.reportingPeriodicity = reportingPeriodicity;
    return this;
  }

   /**
   * Get reportingPeriodicity
   * @return reportingPeriodicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingPeriodicity() {
    return reportingPeriodicity;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingPeriodicity(String reportingPeriodicity) {
    this.reportingPeriodicity = reportingPeriodicity;
  }


  public Dla reportingReceiverRole(String reportingReceiverRole) {
    
    this.reportingReceiverRole = reportingReceiverRole;
    return this;
  }

   /**
   * Get reportingReceiverRole
   * @return reportingReceiverRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_RECEIVER_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingReceiverRole() {
    return reportingReceiverRole;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_RECEIVER_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingReceiverRole(String reportingReceiverRole) {
    this.reportingReceiverRole = reportingReceiverRole;
  }


  public Dla reportingResponsible(String reportingResponsible) {
    
    this.reportingResponsible = reportingResponsible;
    return this;
  }

   /**
   * Get reportingResponsible
   * @return reportingResponsible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_RESPONSIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingResponsible() {
    return reportingResponsible;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_RESPONSIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingResponsible(String reportingResponsible) {
    this.reportingResponsible = reportingResponsible;
  }


  public Dla reportingType(String reportingType) {
    
    this.reportingType = reportingType;
    return this;
  }

   /**
   * Get reportingType
   * @return reportingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingType() {
    return reportingType;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingType(String reportingType) {
    this.reportingType = reportingType;
  }


  public Dla reviewers(List<EntityReference> reviewers) {
    
    this.reviewers = reviewers;
    return this;
  }

  public Dla addReviewersItem(EntityReference reviewersItem) {
    if (this.reviewers == null) {
      this.reviewers = new ArrayList<>();
    }
    this.reviewers.add(reviewersItem);
    return this;
  }

   /**
   * Get reviewers
   * @return reviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REVIEWERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityReference> getReviewers() {
    return reviewers;
  }


  @JsonProperty(JSON_PROPERTY_REVIEWERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewers(List<EntityReference> reviewers) {
    this.reviewers = reviewers;
  }


  public Dla style(Style style) {
    
    this.style = style;
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Style getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(Style style) {
    this.style = style;
  }


  public Dla tags(List<TagLabel> tags) {
    
    this.tags = tags;
    return this;
  }

  public Dla addTagsItem(TagLabel tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagLabel> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<TagLabel> tags) {
    this.tags = tags;
  }


  public Dla updatedAt(Long updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Dla updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Dla usageCount(Integer usageCount) {
    
    this.usageCount = usageCount;
    return this;
  }

   /**
   * Get usageCount
   * @return usageCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUsageCount() {
    return usageCount;
  }


  @JsonProperty(JSON_PROPERTY_USAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsageCount(Integer usageCount) {
    this.usageCount = usageCount;
  }


  public Dla validity(String validity) {
    
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidity() {
    return validity;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidity(String validity) {
    this.validity = validity;
  }


  public Dla version(Double version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Double version) {
    this.version = version;
  }


  public Dla votes(Votes votes) {
    
    this.votes = votes;
    return this;
  }

   /**
   * Get votes
   * @return votes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Votes getVotes() {
    return votes;
  }


  @JsonProperty(JSON_PROPERTY_VOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVotes(Votes votes) {
    this.votes = votes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dla dla = (Dla) o;
    return Objects.equals(this.additionalInformation, dla.additionalInformation) &&
        Objects.equals(this.autoConsumerSystem, dla.autoConsumerSystem) &&
        Objects.equals(this.autoSourceSystem, dla.autoSourceSystem) &&
        Objects.equals(this.changeDescription, dla.changeDescription) &&
        Objects.equals(this.children, dla.children) &&
        Objects.equals(this.conclusionDate, dla.conclusionDate) &&
        Objects.equals(this.consumer, dla.consumer) &&
        Objects.equals(this.cronDataActualization, dla.cronDataActualization) &&
        Objects.equals(this.cronDataAvailability, dla.cronDataAvailability) &&
        Objects.equals(this.cronUpdateData, dla.cronUpdateData) &&
        Objects.equals(this.dataManager, dla.dataManager) &&
        Objects.equals(this.dataProducts, dla.dataProducts) &&
        Objects.equals(this.dataProvisionIndicators, dla.dataProvisionIndicators) &&
        Objects.equals(this.dataQualityIndicators, dla.dataQualityIndicators) &&
        Objects.equals(this.dataRegister, dla.dataRegister) &&
        Objects.equals(this.dataSteward, dla.dataSteward) &&
        Objects.equals(this.deleted, dla.deleted) &&
        Objects.equals(this.deprecated, dla.deprecated) &&
        Objects.equals(this.description, dla.description) &&
        Objects.equals(this.disabled, dla.disabled) &&
        Objects.equals(this.displayName, dla.displayName) &&
        Objects.equals(this.dlaClassification, dla.dlaClassification) &&
        Objects.equals(this.docNumber, dla.docNumber) &&
        Objects.equals(this.docStatus, dla.docStatus) &&
        Objects.equals(this.docType, dla.docType) &&
        Objects.equals(this.domain, dla.domain) &&
        Objects.equals(this.domainData, dla.domainData) &&
        Objects.equals(this.experts, dla.experts) &&
        Objects.equals(this.expirationDate, dla.expirationDate) &&
        Objects.equals(this.extension, dla.extension) &&
        Objects.equals(this.followers, dla.followers) &&
        Objects.equals(this.fullyQualifiedName, dla.fullyQualifiedName) &&
        Objects.equals(this.href, dla.href) &&
        Objects.equals(this.id, dla.id) &&
        Objects.equals(this.incidenSigns, dla.incidenSigns) &&
        Objects.equals(this.lifeCycle, dla.lifeCycle) &&
        Objects.equals(this.mutuallyExclusive, dla.mutuallyExclusive) &&
        Objects.equals(this.name, dla.name) &&
        Objects.equals(this.owner, dla.owner) &&
        Objects.equals(this.parent, dla.parent) &&
        Objects.equals(this.prolongation, dla.prolongation) &&
        Objects.equals(this.provider, dla.provider) &&
        Objects.equals(this.publicationArea, dla.publicationArea) &&
        Objects.equals(this.reportingHref, dla.reportingHref) &&
        Objects.equals(this.reportingPeriodicity, dla.reportingPeriodicity) &&
        Objects.equals(this.reportingReceiverRole, dla.reportingReceiverRole) &&
        Objects.equals(this.reportingResponsible, dla.reportingResponsible) &&
        Objects.equals(this.reportingType, dla.reportingType) &&
        Objects.equals(this.reviewers, dla.reviewers) &&
        Objects.equals(this.style, dla.style) &&
        Objects.equals(this.tags, dla.tags) &&
        Objects.equals(this.updatedAt, dla.updatedAt) &&
        Objects.equals(this.updatedBy, dla.updatedBy) &&
        Objects.equals(this.usageCount, dla.usageCount) &&
        Objects.equals(this.validity, dla.validity) &&
        Objects.equals(this.version, dla.version) &&
        Objects.equals(this.votes, dla.votes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInformation, autoConsumerSystem, autoSourceSystem, changeDescription, children, conclusionDate, consumer, cronDataActualization, cronDataAvailability, cronUpdateData, dataManager, dataProducts, dataProvisionIndicators, dataQualityIndicators, dataRegister, dataSteward, deleted, deprecated, description, disabled, displayName, dlaClassification, docNumber, docStatus, docType, domain, domainData, experts, expirationDate, extension, followers, fullyQualifiedName, href, id, incidenSigns, lifeCycle, mutuallyExclusive, name, owner, parent, prolongation, provider, publicationArea, reportingHref, reportingPeriodicity, reportingReceiverRole, reportingResponsible, reportingType, reviewers, style, tags, updatedAt, updatedBy, usageCount, validity, version, votes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dla {\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    autoConsumerSystem: ").append(toIndentedString(autoConsumerSystem)).append("\n");
    sb.append("    autoSourceSystem: ").append(toIndentedString(autoSourceSystem)).append("\n");
    sb.append("    changeDescription: ").append(toIndentedString(changeDescription)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    conclusionDate: ").append(toIndentedString(conclusionDate)).append("\n");
    sb.append("    consumer: ").append(toIndentedString(consumer)).append("\n");
    sb.append("    cronDataActualization: ").append(toIndentedString(cronDataActualization)).append("\n");
    sb.append("    cronDataAvailability: ").append(toIndentedString(cronDataAvailability)).append("\n");
    sb.append("    cronUpdateData: ").append(toIndentedString(cronUpdateData)).append("\n");
    sb.append("    dataManager: ").append(toIndentedString(dataManager)).append("\n");
    sb.append("    dataProducts: ").append(toIndentedString(dataProducts)).append("\n");
    sb.append("    dataProvisionIndicators: ").append(toIndentedString(dataProvisionIndicators)).append("\n");
    sb.append("    dataQualityIndicators: ").append(toIndentedString(dataQualityIndicators)).append("\n");
    sb.append("    dataRegister: ").append(toIndentedString(dataRegister)).append("\n");
    sb.append("    dataSteward: ").append(toIndentedString(dataSteward)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    deprecated: ").append(toIndentedString(deprecated)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    dlaClassification: ").append(toIndentedString(dlaClassification)).append("\n");
    sb.append("    docNumber: ").append(toIndentedString(docNumber)).append("\n");
    sb.append("    docStatus: ").append(toIndentedString(docStatus)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    domainData: ").append(toIndentedString(domainData)).append("\n");
    sb.append("    experts: ").append(toIndentedString(experts)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    followers: ").append(toIndentedString(followers)).append("\n");
    sb.append("    fullyQualifiedName: ").append(toIndentedString(fullyQualifiedName)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incidenSigns: ").append(toIndentedString(incidenSigns)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    mutuallyExclusive: ").append(toIndentedString(mutuallyExclusive)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    prolongation: ").append(toIndentedString(prolongation)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    publicationArea: ").append(toIndentedString(publicationArea)).append("\n");
    sb.append("    reportingHref: ").append(toIndentedString(reportingHref)).append("\n");
    sb.append("    reportingPeriodicity: ").append(toIndentedString(reportingPeriodicity)).append("\n");
    sb.append("    reportingReceiverRole: ").append(toIndentedString(reportingReceiverRole)).append("\n");
    sb.append("    reportingResponsible: ").append(toIndentedString(reportingResponsible)).append("\n");
    sb.append("    reportingType: ").append(toIndentedString(reportingType)).append("\n");
    sb.append("    reviewers: ").append(toIndentedString(reviewers)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    usageCount: ").append(toIndentedString(usageCount)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * OpenMetadata Apis
 * --- title: APIs slug: /main-concepts/metadata-standard/apis ---  # APIs  OpenMetadata supports REST APIs for getting data and in and out of the metadata service. APIs are built using general best practices of REST API design. We take a schema-first approach by defining Types and Entities in JSON Schema. We implement APIs based on these schemas.  ## Overview  ### URI  Following REST API conventions are followed for Resource URIs: - Operations for an entity are available through the Resource URI as a collection `.../api/<version>/entities`.  - Plural of the entity name is used as the collection name - example `.../api/v1/users`. - Trailing forward slash is not used in the endpoint URI. Example use `.../api/v1/databases` instead of `.../api/v1/databases/`. - Resource URI for an entity instance by the entity id is `.../api/v1/entities/{id}`.  - Resource URI for an entity instance by name is `.../api/v1/entities/name/{name}`.  ### Resource Representation  - The REST API calls return a response with JSON `Content-Type` and `Content-Length` that includes the length of the response. - All responses include the Resource ID field even though the id was provided in the request to simplify the consumption    of the response at the client. - Entity names and field names use `camelCase` per Javascript naming convention. - All resources include an attribute `href` with Resource URI. All relationship fields of an entity will also    include `href` links to the related resource for easy access. - Unknown fields sent by the client in API requests are not ignored to ensure the data sent by the client is not dropped    at the server without the user being aware of it.  ## API Organization  You can find the swagger documentation [here](/swagger.html). In a nutshell:  **Data Asset APIs** - support operations related to data asset entities. - `.../api/v1/databases` - `...api/v1/tables` - `.../api/v1/metrics` - `.../api/v1/dashboards` - `.../api/v1/reports` - `.../api/v1/pipelines` - `.../api/v1/topics`  **Service APIs** - support operations related to services from which metadata is collected: - `.../api/v1/services` is the collection of all service resources. - `.../api/v1/services/databaseService` - APIs related to database services. This includes Transactional databases - MySQL, Postgres, MSSQL, Oracle, and Data Warehouses - Apache Hive BigQuery, Redshift, and Snowflake. - `.../api/v1/services/dashboardService` - APIs related to Dashboard Services. This includes Looker, Superset, and Tableau. - `.../api/v1/services/messagingService` - APIs related to Messaging Services. This includes Apache Kafka, Redpanda, - Kinesis, and others.  **Teams & Users APIs** - `.../api/v1/teams` - APIs related to team entities - `.../api/v1/users` - APIs related to user entities  **Search & Suggest APIs** - support search and suggest APIs: - `.../api/v1/search` - collection for search and suggest APIs - `.../api/v1/search/query` - search entities using query text - `.../api/v1/search/suggest` - get suggested entities used for auto-completion  **Other APIs** - `.../api/v1/tags` for APIs related to Classification and Tag entities - `../api/v1/feeds` for APIs related to Threads and Posts entities - `.../api/v1/usage` for reporting usage information of entities
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: openmetadata-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openmetadata.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openmetadata.client.model.DataSourceEl;
import org.openmetadata.client.model.DomainQuota;
import org.openmetadata.client.model.DomainTeamMember;
import org.openmetadata.client.model.EntityReference;
import org.openmetadata.client.model.LifeCycle;
import org.openmetadata.client.model.Style;
import org.openmetadata.client.model.TagLabel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateDomain
 */
@JsonPropertyOrder({
  CreateDomain.JSON_PROPERTY_DATA_PRODUCTS,
  CreateDomain.JSON_PROPERTY_DATA_SOURCES_LIST,
  CreateDomain.JSON_PROPERTY_DESCRIPTION,
  CreateDomain.JSON_PROPERTY_DISPLAY_NAME,
  CreateDomain.JSON_PROPERTY_DOMAIN,
  CreateDomain.JSON_PROPERTY_DOMAIN_OWNER,
  CreateDomain.JSON_PROPERTY_DOMAIN_QUOTAS_LIST,
  CreateDomain.JSON_PROPERTY_DOMAIN_TEAM,
  CreateDomain.JSON_PROPERTY_DOMAIN_TECH_LEADER,
  CreateDomain.JSON_PROPERTY_DOMAIN_TYPE,
  CreateDomain.JSON_PROPERTY_EXPERTS,
  CreateDomain.JSON_PROPERTY_EXTENSION,
  CreateDomain.JSON_PROPERTY_FULL_NAME,
  CreateDomain.JSON_PROPERTY_FULLY_QUALIFIED_NAME,
  CreateDomain.JSON_PROPERTY_LIFE_CYCLE,
  CreateDomain.JSON_PROPERTY_NAME,
  CreateDomain.JSON_PROPERTY_OWNER,
  CreateDomain.JSON_PROPERTY_PARENT,
  CreateDomain.JSON_PROPERTY_STYLE,
  CreateDomain.JSON_PROPERTY_TAGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-27T13:40:41.122769+03:00[Europe/Moscow]")
public class CreateDomain {
  public static final String JSON_PROPERTY_DATA_PRODUCTS = "dataProducts";
  private List<String> dataProducts = null;

  public static final String JSON_PROPERTY_DATA_SOURCES_LIST = "dataSourcesList";
  private List<DataSourceEl> dataSourcesList = null;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_DOMAIN_OWNER = "domainOwner";
  private String domainOwner;

  public static final String JSON_PROPERTY_DOMAIN_QUOTAS_LIST = "domainQuotasList";
  private List<DomainQuota> domainQuotasList = null;

  public static final String JSON_PROPERTY_DOMAIN_TEAM = "domainTeam";
  private List<DomainTeamMember> domainTeam = null;

  public static final String JSON_PROPERTY_DOMAIN_TECH_LEADER = "domainTechLeader";
  private String domainTechLeader;

  /**
   * Gets or Sets domainType
   */
  public enum DomainTypeEnum {
    SOURCE_ALIGNED("Source-aligned"),
    
    CONSUMER_ALIGNED("Consumer-aligned"),
    
    AGGREGATE("Aggregate");

    private String value;

    DomainTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DomainTypeEnum fromValue(String value) {
      for (DomainTypeEnum b : DomainTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DOMAIN_TYPE = "domainType";
  private DomainTypeEnum domainType;

  public static final String JSON_PROPERTY_EXPERTS = "experts";
  private List<String> experts = null;

  public static final String JSON_PROPERTY_EXTENSION = "extension";
  private Object extension;

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private String fullName;

  public static final String JSON_PROPERTY_FULLY_QUALIFIED_NAME = "fullyQualifiedName";
  private String fullyQualifiedName;

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private LifeCycle lifeCycle;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private EntityReference owner;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private String parent;

  public static final String JSON_PROPERTY_STYLE = "style";
  private Style style;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagLabel> tags = null;

  public CreateDomain() { 
  }

  public CreateDomain dataProducts(List<String> dataProducts) {
    
    this.dataProducts = dataProducts;
    return this;
  }

  public CreateDomain addDataProductsItem(String dataProductsItem) {
    if (this.dataProducts == null) {
      this.dataProducts = new ArrayList<>();
    }
    this.dataProducts.add(dataProductsItem);
    return this;
  }

   /**
   * Get dataProducts
   * @return dataProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDataProducts() {
    return dataProducts;
  }


  @JsonProperty(JSON_PROPERTY_DATA_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataProducts(List<String> dataProducts) {
    this.dataProducts = dataProducts;
  }


  public CreateDomain dataSourcesList(List<DataSourceEl> dataSourcesList) {
    
    this.dataSourcesList = dataSourcesList;
    return this;
  }

  public CreateDomain addDataSourcesListItem(DataSourceEl dataSourcesListItem) {
    if (this.dataSourcesList == null) {
      this.dataSourcesList = new ArrayList<>();
    }
    this.dataSourcesList.add(dataSourcesListItem);
    return this;
  }

   /**
   * Get dataSourcesList
   * @return dataSourcesList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_SOURCES_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataSourceEl> getDataSourcesList() {
    return dataSourcesList;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SOURCES_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSourcesList(List<DataSourceEl> dataSourcesList) {
    this.dataSourcesList = dataSourcesList;
  }


  public CreateDomain description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateDomain displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CreateDomain domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public CreateDomain domainOwner(String domainOwner) {
    
    this.domainOwner = domainOwner;
    return this;
  }

   /**
   * Get domainOwner
   * @return domainOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainOwner() {
    return domainOwner;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainOwner(String domainOwner) {
    this.domainOwner = domainOwner;
  }


  public CreateDomain domainQuotasList(List<DomainQuota> domainQuotasList) {
    
    this.domainQuotasList = domainQuotasList;
    return this;
  }

  public CreateDomain addDomainQuotasListItem(DomainQuota domainQuotasListItem) {
    if (this.domainQuotasList == null) {
      this.domainQuotasList = new ArrayList<>();
    }
    this.domainQuotasList.add(domainQuotasListItem);
    return this;
  }

   /**
   * Get domainQuotasList
   * @return domainQuotasList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_QUOTAS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DomainQuota> getDomainQuotasList() {
    return domainQuotasList;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_QUOTAS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainQuotasList(List<DomainQuota> domainQuotasList) {
    this.domainQuotasList = domainQuotasList;
  }


  public CreateDomain domainTeam(List<DomainTeamMember> domainTeam) {
    
    this.domainTeam = domainTeam;
    return this;
  }

  public CreateDomain addDomainTeamItem(DomainTeamMember domainTeamItem) {
    if (this.domainTeam == null) {
      this.domainTeam = new ArrayList<>();
    }
    this.domainTeam.add(domainTeamItem);
    return this;
  }

   /**
   * Get domainTeam
   * @return domainTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DomainTeamMember> getDomainTeam() {
    return domainTeam;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainTeam(List<DomainTeamMember> domainTeam) {
    this.domainTeam = domainTeam;
  }


  public CreateDomain domainTechLeader(String domainTechLeader) {
    
    this.domainTechLeader = domainTechLeader;
    return this;
  }

   /**
   * Get domainTechLeader
   * @return domainTechLeader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_TECH_LEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainTechLeader() {
    return domainTechLeader;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_TECH_LEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainTechLeader(String domainTechLeader) {
    this.domainTechLeader = domainTechLeader;
  }


  public CreateDomain domainType(DomainTypeEnum domainType) {
    
    this.domainType = domainType;
    return this;
  }

   /**
   * Get domainType
   * @return domainType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DomainTypeEnum getDomainType() {
    return domainType;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDomainType(DomainTypeEnum domainType) {
    this.domainType = domainType;
  }


  public CreateDomain experts(List<String> experts) {
    
    this.experts = experts;
    return this;
  }

  public CreateDomain addExpertsItem(String expertsItem) {
    if (this.experts == null) {
      this.experts = new ArrayList<>();
    }
    this.experts.add(expertsItem);
    return this;
  }

   /**
   * Get experts
   * @return experts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExperts() {
    return experts;
  }


  @JsonProperty(JSON_PROPERTY_EXPERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperts(List<String> experts) {
    this.experts = experts;
  }


  public CreateDomain extension(Object extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getExtension() {
    return extension;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtension(Object extension) {
    this.extension = extension;
  }


  public CreateDomain fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullName() {
    return fullName;
  }


  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public CreateDomain fullyQualifiedName(String fullyQualifiedName) {
    
    this.fullyQualifiedName = fullyQualifiedName;
    return this;
  }

   /**
   * Get fullyQualifiedName
   * @return fullyQualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FULLY_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullyQualifiedName() {
    return fullyQualifiedName;
  }


  @JsonProperty(JSON_PROPERTY_FULLY_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullyQualifiedName(String fullyQualifiedName) {
    this.fullyQualifiedName = fullyQualifiedName;
  }


  public CreateDomain lifeCycle(LifeCycle lifeCycle) {
    
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * Get lifeCycle
   * @return lifeCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LifeCycle getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(LifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public CreateDomain name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateDomain owner(EntityReference owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(EntityReference owner) {
    this.owner = owner;
  }


  public CreateDomain parent(String parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(String parent) {
    this.parent = parent;
  }


  public CreateDomain style(Style style) {
    
    this.style = style;
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Style getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(Style style) {
    this.style = style;
  }


  public CreateDomain tags(List<TagLabel> tags) {
    
    this.tags = tags;
    return this;
  }

  public CreateDomain addTagsItem(TagLabel tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagLabel> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<TagLabel> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDomain createDomain = (CreateDomain) o;
    return Objects.equals(this.dataProducts, createDomain.dataProducts) &&
        Objects.equals(this.dataSourcesList, createDomain.dataSourcesList) &&
        Objects.equals(this.description, createDomain.description) &&
        Objects.equals(this.displayName, createDomain.displayName) &&
        Objects.equals(this.domain, createDomain.domain) &&
        Objects.equals(this.domainOwner, createDomain.domainOwner) &&
        Objects.equals(this.domainQuotasList, createDomain.domainQuotasList) &&
        Objects.equals(this.domainTeam, createDomain.domainTeam) &&
        Objects.equals(this.domainTechLeader, createDomain.domainTechLeader) &&
        Objects.equals(this.domainType, createDomain.domainType) &&
        Objects.equals(this.experts, createDomain.experts) &&
        Objects.equals(this.extension, createDomain.extension) &&
        Objects.equals(this.fullName, createDomain.fullName) &&
        Objects.equals(this.fullyQualifiedName, createDomain.fullyQualifiedName) &&
        Objects.equals(this.lifeCycle, createDomain.lifeCycle) &&
        Objects.equals(this.name, createDomain.name) &&
        Objects.equals(this.owner, createDomain.owner) &&
        Objects.equals(this.parent, createDomain.parent) &&
        Objects.equals(this.style, createDomain.style) &&
        Objects.equals(this.tags, createDomain.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataProducts, dataSourcesList, description, displayName, domain, domainOwner, domainQuotasList, domainTeam, domainTechLeader, domainType, experts, extension, fullName, fullyQualifiedName, lifeCycle, name, owner, parent, style, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDomain {\n");
    sb.append("    dataProducts: ").append(toIndentedString(dataProducts)).append("\n");
    sb.append("    dataSourcesList: ").append(toIndentedString(dataSourcesList)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    domainOwner: ").append(toIndentedString(domainOwner)).append("\n");
    sb.append("    domainQuotasList: ").append(toIndentedString(domainQuotasList)).append("\n");
    sb.append("    domainTeam: ").append(toIndentedString(domainTeam)).append("\n");
    sb.append("    domainTechLeader: ").append(toIndentedString(domainTechLeader)).append("\n");
    sb.append("    domainType: ").append(toIndentedString(domainType)).append("\n");
    sb.append("    experts: ").append(toIndentedString(experts)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    fullyQualifiedName: ").append(toIndentedString(fullyQualifiedName)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


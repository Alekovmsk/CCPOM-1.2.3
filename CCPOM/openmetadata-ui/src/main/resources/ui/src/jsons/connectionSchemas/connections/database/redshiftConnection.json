{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "RedshiftConnection",
  "description": "Redshift  Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.RedshiftConnection",
  "definitions": {
    "redshiftType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Redshift"
      ],
      "default": "Redshift"
    },
    "redshiftScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "redshift+psycopg2"
      ],
      "default": "redshift+psycopg2"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "default": "Redshift",
      "type": "string",
      "enum": [
        "Redshift"
      ]
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "default": "redshift+psycopg2",
      "type": "string",
      "enum": [
        "redshift+psycopg2"
      ]
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Redshift. This user should have privileges to read all the metadata in Redshift.",
      "type": "string"
    },
    "password": {
      "title": "Password",
      "description": "Password to connect to Redshift.",
      "type": "string",
      "format": "password"
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the Redshift service.",
      "type": "string"
    },
    "database": {
      "title": "Database",
      "description": "Initial Redshift database to connect to. If you want to ingest all databases, set ingestAllDatabases to true.",
      "type": "string"
    },
    "ingestAllDatabases": {
      "title": "Ingest All Databases",
      "description": "Ingest data from all databases in Redshift. You can use databaseFilterPattern on top of this.",
      "type": "boolean",
      "default": false
    },
    "sslMode": {
      "title": "SSL Mode",
      "description": "SSL Mode to connect to redshift database.",
      "enum": [
        "disable",
        "allow",
        "prefer",
        "require",
        "verify-ca",
        "verify-full"
      ],
      "default": "disable"
    },
    "sslConfig": {
      "title": "SSL Config",
      "description": "Client SSL configuration",
      "javaType": "org.openmetadata.schema.security.ssl.SSLConfig",
      "oneOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Validate SSL Client Config",
          "description": "OpenMetadata Client configured to validate SSL certificates.",
          "type": "object",
          "javaType": "org.openmetadata.schema.security.ssl.ValidateSSLClientConfig",
          "properties": {
            "certificatePath": {
              "title": "Certificate Path",
              "description": "CA certificate path. E.g., /path/to/public.cert. Will be used if Verify SSL is set to `validate`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "connectionOptions": {
      "title": "Connection Options",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionOptions",
      "description": "Additional connection options to build the URL that can be sent to service during the connection.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionArguments",
      "description": "Additional connection arguments such as security or protocol configs that can be sent to service during connection.",
      "type": "object",
      "additionalProperties": {
        ".{1,}": {
          "type": "string"
        }
      }
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsUsageExtraction": {
      "description": "Supports Usage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsLineageExtraction": {
      "description": "Supports Lineage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsDBTExtraction": {
      "description": "Supports DBT Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "description": "Supports Profiler",
      "type": "boolean",
      "default": true
    },
    "supportsDatabase": {
      "title": "Supports Database",
      "description": "The source service supports the database concept in its hierarchy",
      "type": "boolean",
      "default": true
    },
    "supportsQueryComment": {
      "title": "Supports Query Comment",
      "description": "For Database Services using SQLAlchemy, True to enable running a comment for all queries run from OpenMetadata.",
      "type": "boolean",
      "default": true
    },
    "sampleDataStorageConfig": {
      "title": "S3 Config for Sample Data",
      "description": "Storage config to store sample data",
      "type": "object",
      "javaType": "org.openmetadata.schema.services.connections.database.SampleDataStorageConfig",
      "properties": {
        "config": {
          "oneOf": [
            {
              "title": "Sample Data Storage Config",
              "description": "Storage config to store sample data",
              "type": "object",
              "properties": {
                "bucketName": {
                  "title": "Bucket Name",
                  "description": "Bucket Name",
                  "type": "string",
                  "default": ""
                },
                "prefix": {
                  "title": "Prefix",
                  "description": "Prefix of the data source.",
                  "type": "string",
                  "default": ""
                },
                "overwriteData": {
                  "title": "Overwrite Sample Data",
                  "description": "When this field enabled a single parquet file will be created to store sample data, otherwise we will create a new file per day",
                  "type": "boolean",
                  "default": true
                },
                "storageConfig": {
                  "oneOf": [
                    {
                      "title": "AWS S3 Storage Config",
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "AWS credentials configs.",
                      "type": "object",
                      "javaType": "org.openmetadata.schema.security.credentials.AWSCredentials",
                      "properties": {
                        "awsAccessKeyId": {
                          "title": "AWS Access Key ID",
                          "description": "AWS Access key ID.",
                          "type": "string"
                        },
                        "awsSecretAccessKey": {
                          "title": "AWS Secret Access Key",
                          "description": "AWS Secret Access Key.",
                          "type": "string",
                          "format": "password"
                        },
                        "awsRegion": {
                          "title": "AWS Region",
                          "description": "AWS Region",
                          "type": "string"
                        },
                        "awsSessionToken": {
                          "title": "AWS Session Token",
                          "description": "AWS Session Token.",
                          "type": "string"
                        },
                        "endPointURL": {
                          "title": "Endpoint URL",
                          "description": "EndPoint URL for the AWS",
                          "type": "string",
                          "format": "uri"
                        },
                        "profileName": {
                          "title": "Profile Name",
                          "description": "The name of a profile to use with the boto session.",
                          "type": "string"
                        },
                        "assumeRoleArn": {
                          "title": "Role Arn for Assume Role",
                          "description": "The Amazon Resource Name (ARN) of the role to assume. Required Field in case of Assume Role",
                          "type": "string"
                        },
                        "assumeRoleSessionName": {
                          "title": "Role Session Name for Assume Role",
                          "description": "An identifier for the assumed role session. Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. Required Field in case of Assume Role",
                          "type": "string",
                          "default": "OpenMetadataSession"
                        },
                        "assumeRoleSourceIdentity": {
                          "title": "Source Identity for Assume Role",
                          "description": "The Amazon Resource Name (ARN) of the role to assume. Optional Field in case of Assume Role",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "awsRegion"
                      ]
                    },
                    {
                      "title": "OpenMetadata Storage",
                      "type": "object",
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            {
              "title": "No Sample Data Storage Config",
              "type": "object",
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "required": [
    "hostPort",
    "username",
    "database"
  ]
}
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActionRecorder = /** @class */ (function () {
    function ActionRecorder(fileName, isReportMode) {
        this.errors = [];
        this.addedKeys = [];
        this.removedKeys = [];
        this.fileName = fileName;
        this.isReportMode = isReportMode;
    }
    ActionRecorder.prototype.keyAdded = function (key) {
        this.addedKeys.push(key);
    };
    ActionRecorder.prototype.keyRemoved = function (key) {
        this.removedKeys.push(key);
    };
    ActionRecorder.prototype.error = function (message) {
        this.errors.push(message(this.fileName));
    };
    ActionRecorder.prototype.hasAnyActions = function () {
        return this.hasAnyErrors() ||
            this.addedKeys.length > 0 ||
            this.removedKeys.length > 0;
    };
    ActionRecorder.prototype.flushToConsole = function () {
        var errors = this.getErrors();
        var added = this.getMessageForAddedKeys();
        var removed = this.getMessageForRemovedKeys();
        errors && console.error(errors);
        added && console.log(added);
        removed && console.log(removed);
    };
    ActionRecorder.prototype.getErrors = function () {
        if (this.hasAnyErrors()) {
            return this.errors.join('\n');
        }
        return null;
    };
    ActionRecorder.prototype.hasAnyErrors = function () {
        return this.errors.length > 0;
    };
    ActionRecorder.prototype.getMessageForAddedKeys = function () {
        if (this.addedKeys.length > 0) {
            var prefix = this.isReportMode ? 'Missing keys in' : 'Pushed keys to';
            return "".concat(prefix, " ").concat(this.fileName, ": ").concat(this.addedKeys.join(', '));
        }
        return null;
    };
    ActionRecorder.prototype.getMessageForRemovedKeys = function () {
        if (this.removedKeys.length > 0) {
            var prefix = this.isReportMode ? 'Orphaned keys found in' : 'Removed keys from';
            return "".concat(prefix, " ").concat(this.fileName, ": ").concat(this.removedKeys.join(', '));
        }
        return null;
    };
    return ActionRecorder;
}());
exports.default = ActionRecorder;
//# sourceMappingURL=ActionRecorder.js.map
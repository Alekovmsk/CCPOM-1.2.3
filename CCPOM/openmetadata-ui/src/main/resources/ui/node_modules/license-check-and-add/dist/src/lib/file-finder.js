"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileFinder = exports.DEFAULT_IGNORES = void 0;
var gitignore_to_glob_1 = __importDefault(require("gitignore-to-glob"));
var globby = __importStar(require("globby"));
var path = __importStar(require("path"));
exports.DEFAULT_IGNORES = [
    '**/node_modules', '**/dist', '**/.git',
    '**/LICENSE*', '**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.gif', '**/*.tif', '**/*.ico', '**/*.json', '**/*.zip', '**/*.tgz',
];
var FileFinder = /** @class */ (function () {
    function FileFinder() {
    }
    FileFinder.getPaths = function (ignore, ignoreDefaultIgnores, ignoreFile) {
        var includes = ['**/*'];
        var ignores = ignore;
        if (ignoreFile) {
            console.debug('Using ignore file');
            includes = includes.concat(gitignore_to_glob_1.default(path.resolve(process.cwd(), ignoreFile)), '!' + ignoreFile);
        }
        if (!ignoreDefaultIgnores) {
            ignores = ignores.concat(exports.DEFAULT_IGNORES);
        }
        return globby.sync(includes, {
            dot: true,
            expandDirectories: true,
            ignore: ignores,
        });
    };
    return FileFinder;
}());
exports.FileFinder = FileFinder;
//# sourceMappingURL=file-finder.js.map